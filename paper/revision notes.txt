Abstract

Introduction
-keep as is, reword to sound better
-project source code link

Background
-1 sentence describing the actual puzzle (pull from existing material)
-N-Queens is NP-hard
-many modalities, local optima, and global optima
-Table 1 shows the increase in problem size and number of distinct solutions
-O(n!) complexity for deterministic approach: too slow, especially for larger values of N because the problem is huge
-8-queens shows characteristic problem landscape (show histogram)
-above 26 queens, the problem is intractable
-two objectives: finding the first solution as fast as possible, finding the most solutions given a fixed number of function calls (generations)
-our goal was to generate many solutions as quickly as possible

Related Work
-maybe there's a best static mutation value for traditional GA? (hesser, maenner)
-alternative approaches: maybe increasing diversity overall will help overcome local optimum convergence in standard GA? combine standard GA with introducing randomly generated individuals into the population; 
-adaptive approaches: change mutation rate over time (low during exploration, high during exploitation/vice versa)
-self adaptive approaches: use mean fitness to adjust genetic operators; change mutation rate between two values based on fitness; each chromosome has individually specified operator probabilities which are encoded into phenotype with meta-operators

Proposed Approach
-1 sentence describing motivation: observed in nature that mutation increases with inbreeding, wanted to replicate this with genetic algorithms
-integer-encoded chromosome includes protective embedded constraints - values represent column positions of queens, their index in the array of genes is their row.
-traditional GA operators apply; roulette wheel selection is used, single-point crossover is used; single-value uniform mutation is used
-use similarity as self-adaptive characteristic of GA; adjust mutation rate based on similarity, crossover probability unaffected
-define genetic operator probabilities in a table, reference it
-mutation operator probability replaced with chromosome similarity threshold (reference table)
-mutation operator probability delta is fixed value (reference table)
-keep Applying Adaptive Variable Mutation, but reword for clarity
-keep Chromosome Similarity Algorithm, but reword for clarity; "similar" chromosomes are actually identical, chromosome similarity across population determines how many chromosomes in the population are the same
-keep Fitness Function, edit, combine with Selection Method
-drop Genetic Operations
-rename Chromosome Evaluation to Identifying Distinct Solutions; include symmetry operations

Experimental Methodology
1st para: specify all values of N
replace running time with function calls
mention that one function call = one generation
for N=32, increased PROBLEM SIZE not complexity

2nd para: list all values of m
MUTATION PROBABILITY not RATE
adapative variable CHANGE TO self adaptive

For N = 18 para: rewrite

last para: condense to one sentence; descriptive statistics were gathered every 1000 function calls/generations


Results and Analysis
-begin with: show the difference between traditional GA results and our approach, reference table
-main objective: most solutions generated within fixed # function calls
-talk about the trends; traditional GA approach wins when using the best experimentally determined Mc up until N = 15; self-adaptive approach wins for all N > 15; as N increases, delta increases. (cite table)
-unfair advantage for traditional GA over self-adaptive; optimal static Mc changes as N changes; nobody knows what the ideal Mc is for all problems (cite hesser, maenner)
-even in spite of unfair advantage, self-adaptive out performs traditional GA for all N > 15; conclusion is our approach performs better as problems grow larger
-selfadaptive approach tailors mutation rate throughout the duration of solution search; our approach not only is based on time (generations), nor is it based on historical similarity, it adapts every generation and increases diversity as diversity becomes important.
-diversity of population is always kept roughly at the chromosome similarity threshold value; when chromosome similarity is too high, diversity is low and few solutions are found; when similarity is low, diversity is too high and optima fail to be converged upon; when solutions are converged upon, diversity increases in order to expand the search to other solutions;this behavior is desirable in a multimodal problem with many optima like N-Queens; this prevents being stuck in a local optimum while also preventing the search from being wildly random and failing to converge on an optimum
-drop Traversing the Problem Landscape
-comment on relationship between N and best experimentally determined fixed mutation rate (linear downward trend)
-drop Plotted Results and Observations
-drop Why Not Fixed Mutation?


Conclusions and Further Study Remarks
-why not fixed mutation? you cannot adapt to the stage of search that you're in; sometimes you want to converge on an optimum, sometimes you want to widen the search but when you are only using mutation as a background operation naiively you don't have a choice
-because we are using a self-adaptive approach, mutation can change based on the problem, and also on the problem difficulty; as time (generations) goes
